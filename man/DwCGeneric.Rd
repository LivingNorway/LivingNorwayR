% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/DwCGeneric.R
\name{DwCGeneric}
\alias{DwCGeneric}
\title{R6 class representing a generic data structure for a Darwin Core archive file}
\description{
R6 class representing a generic data structure for a Darwin Core archive file

R6 class representing a generic data structure for a Darwin Core archive file
}
\details{
The \code{DwcGeneric} class serves a base class to all Darwin Core archive file types. This class supports all kinds of Darwin Core
archive files but may miss some of the specialised functionality of the more specialist classes.
See \url{https://dwc.tdwg.org/terms/}{the Darwin core reference guide} for more information on Darwin core classes and the terms
supported by them.
}
\seealso{
\code{\link[DwCTerm]{DwCTerm}}

\code{\link[DwCTerm]{DwCTerm}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-setTableName}{\code{DwCGeneric$setTableName()}}
\item \href{#method-getFileName}{\code{DwCGeneric$getFileName()}}
\item \href{#method-importDataTable}{\code{DwCGeneric$importDataTable()}}
\item \href{#method-new}{\code{DwCGeneric$new()}}
\item \href{#method-getDwCClassName}{\code{DwCGeneric$getDwCClassName()}}
\item \href{#method-getDwCTermInfo}{\code{DwCGeneric$getDwCTermInfo()}}
\item \href{#method-getTermMapping}{\code{DwCGeneric$getTermMapping()}}
\item \href{#method-getAssociatedTerms}{\code{DwCGeneric$getAssociatedTerms()}}
\item \href{#method-print}{\code{DwCGeneric$print()}}
\item \href{#method-exportAsDataFrame}{\code{DwCGeneric$exportAsDataFrame()}}
\item \href{#method-clone}{\code{DwCGeneric$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-setTableName"></a>}}
\if{latex}{\out{\hypertarget{method-setTableName}{}}}
\subsection{Method \code{setTableName()}}{
Set the name of the file that the data will print to when preparing the Darwin core archive
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DwCGeneric$setTableName(inTableName)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{inFileName}}{A character scalar giving the name to give the data file in a Darwin core archive}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-getFileName"></a>}}
\if{latex}{\out{\hypertarget{method-getFileName}{}}}
\subsection{Method \code{getFileName()}}{
Retrieve the name of the file that the data will print to when preparing the Darwin core archive
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DwCGeneric$getFileName()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
The name currently set as the file name in the output archive
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-importDataTable"></a>}}
\if{latex}{\out{\hypertarget{method-importDataTable}{}}}
\subsection{Method \code{importDataTable()}}{
Import data from a \code{data.frame} into a \code{DwCGeneric} object
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DwCGeneric$importDataTable(objectData, idColumnInfo, ...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{objectData}}{A \code{data.frame} containing the data to import into the object}

\item{\code{idColumnInfo}}{Either a \code{character} scalar containing the column name
of \code{objectData} or an \code{integer} scalar giving the index of the column of
\code{objectData} that corresponds to the ID variable}

\item{\code{...}}{A named set of parameter corresponding to Darwin core terms associated
with the DwCGeneric class type. Each is either a a \code{character} scalar containing
the column name of \code{objectData} or an \code{integer} scalar giving the index of
the column of \code{objectData} that corresponds to the term}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\if{latex}{\out{\hypertarget{method-new}{}}}
\subsection{Method \code{new()}}{
Create a new DwCGeneric object
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DwCGeneric$new(classTermInfo, associatedTerms, objectData, idColumnInfo, ...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{classTermInfo}}{A \code{DwCTerm} object containing the term information for the class}

\item{\code{associatedTerms}}{A \code{list} of \code{DwCTerm} objects that contain all the terms associated with the class}

\item{\code{objectData}}{A \code{data.frame} containing the data to import into the object}

\item{\code{idColumnInfo}}{Either a \code{character} scalar containing the column name
of \code{objectData} or an \code{integer} scalar giving the index of the column of
\code{objectData} that corresponds to the ID variable}

\item{\code{...}}{A named set of parameter corresponding to Darwin core terms associated
with the DwCGeneric class type. Each is either a a \code{character} scalar containing
the column name of \code{objectData} or an \code{integer} scalar giving the index of
the column of \code{objectData} that corresponds to the term}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A new \code{DwCGeneric} object
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-getDwCClassName"></a>}}
\if{latex}{\out{\hypertarget{method-getDwCClassName}{}}}
\subsection{Method \code{getDwCClassName()}}{
Retrieve the name of the class used in Darwin core
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DwCGeneric$getDwCClassName()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A \code{character} scalar contining the name of the Darwin core class
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-getDwCTermInfo"></a>}}
\if{latex}{\out{\hypertarget{method-getDwCTermInfo}{}}}
\subsection{Method \code{getDwCTermInfo()}}{
Retrieve the term information of thee Darwin core class of the object
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DwCGeneric$getDwCTermInfo()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A \code{DwCTerm} object containing the term information of the Darwin core class
of the object
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-getTermMapping"></a>}}
\if{latex}{\out{\hypertarget{method-getTermMapping}{}}}
\subsection{Method \code{getTermMapping()}}{
Retrieve the mapping information of the Darwin core terms associated with the class to the
columns in the data table
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DwCGeneric$getTermMapping()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A \code{data.frame} with one row for each Darwin core term associated with the object's
class with two columns: \code{columnIndex} containing the column index of the associated term in the
table and \code{columnName} containg the name of the column
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-getAssociatedTerms"></a>}}
\if{latex}{\out{\hypertarget{method-getAssociatedTerms}{}}}
\subsection{Method \code{getAssociatedTerms()}}{
Retrieve the terms associated with the Darwin core class of the object
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DwCGeneric$getAssociatedTerms()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A \code{list} of \code{DwCTerm} objects containing the term information
Print the term information
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-print"></a>}}
\if{latex}{\out{\hypertarget{method-print}{}}}
\subsection{Method \code{print()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DwCGeneric$print()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-exportAsDataFrame"></a>}}
\if{latex}{\out{\hypertarget{method-exportAsDataFrame}{}}}
\subsection{Method \code{exportAsDataFrame()}}{
Export the data contained in the table as a \code{data.frame}
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DwCGeneric$exportAsDataFrame()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A \code{data.frame} of the object's table data
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\if{latex}{\out{\hypertarget{method-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DwCGeneric$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}

% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/DwCArchive.R
\name{DwCArchive}
\alias{DwCArchive}
\title{R6 DwC archive class}
\format{
\code{\link{R6Class}} object.
}
\description{
R6 class representing a complete data structure
for a Darwin Core archive
}
\details{
The \code{DwcArchive} class serves a base class to all Darwin Core
archive file types. This class supports all kinds of Darwin Core archive files
but may miss some of the specialised functionality of the more specialist
classes. See \url{https://dwc.tdwg.org/text/}{the Darwin core archive guide}
for more information on the structure of Darwin core archive files.
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-DwCArchive-new}{\code{DwCArchive$new()}}
\item \href{#method-DwCArchive-exportAsDwCArchive}{\code{DwCArchive$exportAsDwCArchive()}}
\item \href{#method-DwCArchive-print}{\code{DwCArchive$print()}}
\item \href{#method-DwCArchive-getNumberExtensions}{\code{DwCArchive$getNumberExtensions()}}
\item \href{#method-DwCArchive-getCoreTable}{\code{DwCArchive$getCoreTable()}}
\item \href{#method-DwCArchive-getExtensionTables}{\code{DwCArchive$getExtensionTables()}}
\item \href{#method-DwCArchive-getMetadata}{\code{DwCArchive$getMetadata()}}
\item \href{#method-DwCArchive-clone}{\code{DwCArchive$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DwCArchive-new"></a>}}
\if{latex}{\out{\hypertarget{method-DwCArchive-new}{}}}
\subsection{Method \code{new()}}{
Create a new \code{DwCAchive} object
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DwCArchive$new(coreDwC, extDwC = NULL, metadata = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{coreDwC}}{A \code{DwCGeneric} (or derived class) object that represents the
table that corresponds to the 'core' table.  Alternatively, this parameter can be
\code{character} scalar giving the location of the Darwin core archive file to
initialize the object from}

\item{\code{extDwC}}{A \code{list} of \code{DwCGeneric} (or derived class) objects that represent
the tables used as extension objects in the Darwin Core archive.  If \code{coreDwC}
is a character scalar then \code{extDwC} can also be a character scalar that contains the
default file encodings for the files in the Darwin core archive}

\item{\code{metadata}}{A \code{DwCMetadata} object that contains the metadata for the archive}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DwCArchive-exportAsDwCArchive"></a>}}
\if{latex}{\out{\hypertarget{method-DwCArchive-exportAsDwCArchive}{}}}
\subsection{Method \code{exportAsDwCArchive()}}{
Export the archive as a Darwin core archive file
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DwCArchive$exportAsDwCArchive(
  fileName,
  quote = TRUE,
  sep = "\\t",
  eol = "\\n",
  na = "",
  dec = ".",
  qmethod = "escape",
  fileEncoding = "",
  emlLocation = "eml.xml"
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{fileName}}{A \code{character} string containing the file location of the output Darwin Core Archive.}

\item{\code{quote}}{A \code{logical} scalar or a \code{numeric} vector. If \code{TRUE}, any character or factor
columns will be surrounded by double quotes. If a \code{numeric} vector, its elements are taken as the
indeces of columns to quote. In both cases, row and column names are quoted if they are written. If \code{FALSE},
nothing is quoted.}

\item{\code{sep}}{The field seperator stirng. Values within each row are separated by this string.}

\item{\code{eol}}{The character(s) to print at the end of each line (row).}

\item{\code{na}}{The string to use for missing values in the data.}

\item{\code{dec}}{The string to use for decimal points in numeric or complex columns: must be a single character}

\item{\code{qmethod}}{A character string specifying how to deal with embedded double quote characters when
quoting strings. Must be one of \code{"escape"}, in which case the quote character is escaped in C style by a
backslash, or \code{"double"}, in which case it is doubled}

\item{\code{fileEncoding}}{A character string. If non-empty, declares the encoding to be used on a file so the
character data can be re-encoded as they are written}

\item{\code{emlLocation}}{The location to store the EML metadata in the Darwin Core archive}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DwCArchive-print"></a>}}
\if{latex}{\out{\hypertarget{method-DwCArchive-print}{}}}
\subsection{Method \code{print()}}{
Print the archive information
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DwCArchive$print()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DwCArchive-getNumberExtensions"></a>}}
\if{latex}{\out{\hypertarget{method-DwCArchive-getNumberExtensions}{}}}
\subsection{Method \code{getNumberExtensions()}}{
Retrieve the number of extensions used in the archive
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DwCArchive$getNumberExtensions()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
An \code{integer} scalar containing the number of extensions used in the archive
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DwCArchive-getCoreTable"></a>}}
\if{latex}{\out{\hypertarget{method-DwCArchive-getCoreTable}{}}}
\subsection{Method \code{getCoreTable()}}{
Retrieve the core table in the archive
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DwCArchive$getCoreTable()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
An object derived from \code{DwCGeneric} that contains the core table information
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DwCArchive-getExtensionTables"></a>}}
\if{latex}{\out{\hypertarget{method-DwCArchive-getExtensionTables}{}}}
\subsection{Method \code{getExtensionTables()}}{
Retrieve an extension table from the archive
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DwCArchive$getExtensionTables(extIndex = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{extIndex}}{Either an \code{integer} vector giving the indeces of the extension tables to
retrieve from the archive or a \code{character} vector giving the names of the tables to
retrieve from the archive.  If this parameter is \code{NULL} then all extension tables are
retrieved}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A \code{list} of objects derived from \code{DwCGeneric} that contains the extension table
information
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DwCArchive-getMetadata"></a>}}
\if{latex}{\out{\hypertarget{method-DwCArchive-getMetadata}{}}}
\subsection{Method \code{getMetadata()}}{
Retrieve the metadata for the archive
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DwCArchive$getMetadata()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A \code{DwCMetadata} object that contains the metadata of the archive
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DwCArchive-clone"></a>}}
\if{latex}{\out{\hypertarget{method-DwCArchive-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DwCArchive$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
